<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Spring JDBC 기본 개념: https://gmlwjd9405.github.io/2018/05/15/setting-for-db-programming.html -->

	<context:annotation-config />

	<!-- Autowired. component-scan으로 dao 패키지를 참조함으로써 다음과 같은 코드를 간소화한다.
	<bean id="clientDao" class="ClientDao" />
	<bean id="insuranceDao" class="InsuranceDao" />
	-->
	<context:component-scan base-package="dao" />

	<!-- BasicDataSource, PoolingDataSource, SingleConnectionDataSource, DriverManagerDataSource -->
	<!-- DataSource는 Connection Pool, Transaction을 지원한다. BasicDataSource 참고(http://docs.altibase.com/pages/viewpage.action?pageId=7340956) -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- JDBC Driver 클래스 명 설정 -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<!-- connection url -->
		<property name="url" value="${jdbc.url}" />
		<!-- DB 사용자 계정 설정 -->
		<property name="username" value="${jdbc.username}" />
		<!-- DB 사용자 패스워드 설정 -->
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<context:property-placeholder location="jdbc.properties" />
</beans>
